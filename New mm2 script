-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")

-- ScreenGui setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "VanxellHub"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame for Hub
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)  -- Centered position
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BackgroundTransparency = 0.2
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false  -- Set to false initially
MainFrame.Parent = ScreenGui
MainFrame.ClipsDescendants = true
MainFrame.ZIndex = 2  -- Ensure it appears above other UI elements

-- Rounded Corners for MainFrame
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)  -- Rounds the corners
UICorner.Parent = MainFrame

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Vanxell Hub"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.ZIndex = 2
Title.Parent = MainFrame

-- Rounded Corners for Title
local titleCorner = UICorner:Clone()
titleCorner.Parent = Title

-- GUI Toggle Button positioned on the left side of the screen
local toggleGuiButton = Instance.new("TextButton")
toggleGuiButton.Size = UDim2.new(0, 80, 0, 30)
toggleGuiButton.Position = UDim2.new(0, 10, 0.5, -15)  -- Positioned on the left side
toggleGuiButton.Text = "Toggle GUI"
toggleGuiButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleGuiButton.TextColor3 = Color3.fromRGB(0, 255, 127)
toggleGuiButton.Font = Enum.Font.Gotham
toggleGuiButton.TextSize = 14
toggleGuiButton.Parent = ScreenGui

-- Rounded Corners for Toggle Button
local toggleButtonCorner = UICorner:Clone()
toggleButtonCorner.Parent = toggleGuiButton

-- Toggle Main Frame visibility with fade-in/fade-out effect
toggleGuiButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible  -- Toggle visibility
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
    local tween = TweenService:Create(MainFrame, tweenInfo, {BackgroundTransparency = MainFrame.Visible and 0.2 or 1})
    tween:Play()
end)

-- Function to create a styled button with hover effect
local function createStyledButton(text, positionY)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -20, 0, 35)
    button.Position = UDim2.new(0, 10, 0, positionY)
    button.Text = text
    button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.Gotham
    button.TextSize = 16
    button.ZIndex = 2
    button.Parent = MainFrame

    -- Rounded Corners for Buttons
    local buttonCorner = UICorner:Clone()
    buttonCorner.Parent = button

    -- Hover Effect for Buttons
    button.MouseEnter:Connect(function()
        local hoverTween = TweenService:Create(button, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)})
        hoverTween:Play()
    end)
    button.MouseLeave:Connect(function()
        local leaveTween = TweenService:Create(button, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)})
        leaveTween:Play()
    end)

    return button
end

-- Grab Gun Button
local grabGunButton = createStyledButton("Grab Gun", 50)
grabGunButton.MouseButton1Click:Connect(function()
    -- Allow grabbing the gun only if the sheriff is not alive
    local gun = nil
    for _, item in pairs(Workspace:GetDescendants()) do
        if item:IsA("Tool") and item.Name == "Gun" and item.Parent == Workspace then
            gun = item
            break  -- Stop searching once we find the gun
        end
    end

    if gun then
        -- Teleport the player to the gun's position
        LocalPlayer.Character.HumanoidRootPart.CFrame = gun.Handle.CFrame * CFrame.new(0, 2, 0)  -- Adjust height if necessary
        wait(0.1)  -- Small wait to allow teleportation to complete
        gun.Parent = LocalPlayer.Backpack  -- Move the gun to the player's backpack
        print("Gun grabbed successfully.")
    else
        print("No gun found in the workspace.")
    end
end)

-- Shoot Murder Button
local shootMurderButton = createStyledButton("Shoot Murder", 100)
shootMurderButton.MouseButton1Click:Connect(function()
    -- Example of what happens when you click this button
    print("Shoot Murder activated.")
    
    -- Create a small button that appears on the right side
    local smallButton = Instance.new("TextButton")
    smallButton.Size = UDim2.new(0, 50, 0, 50)
    smallButton.Position = UDim2.new(1, -60, 0.5, -25)  -- Positioned on the right side
    smallButton.Text = "Shoot"
    smallButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    smallButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    smallButton.Font = Enum.Font.Gotham
    smallButton.TextSize = 14
    smallButton.Parent = ScreenGui

    -- Rounded Corners for Small Button
    local smallButtonCorner = Instance.new("UICorner")
    smallButtonCorner.CornerRadius = UDim.new(0, 12)
    smallButtonCorner.Parent = smallButton

    smallButton.MouseButton1Click:Connect(function()
        print("Murder action executed.")
        -- Add your shooting functionality here
    end)
end)

-- Function to update the leaderboard safely
local function UpdateLeaderboard()
    local playerName = "Mark_ShinyStar"  -- Example player name
    local player = Players:FindFirstChild(playerName)

    if player then
        -- Proceed with updating the leaderboard using player data
        print("Updating leaderboard for " .. playerName)
    else
        print("Player " .. playerName .. " not found.")
    end
end

-- Call the function to update the leaderboard
UpdateLeaderboard()
