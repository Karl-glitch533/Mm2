-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- ScreenGui setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "VanxellHub"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame for Hub
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)  -- Centered position
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BorderColor3 = Color3.fromRGB(0, 255, 0)
MainFrame.Visible = false  -- Set to false initially
MainFrame.Parent = ScreenGui

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Vanxell Hub"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Title.BorderColor3 = Color3.fromRGB(0, 255, 0)
Title.Parent = MainFrame

-- GUI Toggle Button positioned on the left side of the screen
local toggleGuiButton = Instance.new("TextButton")
toggleGuiButton.Size = UDim2.new(0, 80, 0, 30)
toggleGuiButton.Position = UDim2.new(0, 10, 0.5, -15)  -- Positioned on the left side
toggleGuiButton.Text = "Toggle GUI"
toggleGuiButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleGuiButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
toggleGuiButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleGuiButton.Parent = ScreenGui

toggleGuiButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible  -- Toggle visibility
end)

-- Function to add ESP
local function addEsp(player)
    if player.Character then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = player.Character
        highlight.Parent = player.Character

        local function updateRole()
            if player.Backpack:FindFirstChild("Knife") or player.Character:FindFirstChild("Knife") then
                highlight.FillColor = Color3.fromRGB(255, 0, 0)  -- Murderer (Red)
            elseif player.Backpack:FindFirstChild("Gun") or player.Character:FindFirstChild("Gun") then
                highlight.FillColor = Color3.fromRGB(0, 0, 255)  -- Sheriff (Blue)
            else
                highlight.FillColor = Color3.fromRGB(0, 255, 0)  -- Innocent (Green)
            end
        end

        -- Update highlight when character is added or updated
        player.CharacterAdded:Connect(function(character)
            highlight.Adornee = character  -- Update highlight to new character
            updateRole()  -- Update role on character addition
        end)

        -- Connect to Backpack changes for the player
        player.Backpack.ChildAdded:Connect(updateRole)
        player.Character.DescendantAdded:Connect(updateRole)

        updateRole()  -- Initial role update
    end
end

-- Initial ESP for existing players
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        addEsp(player)
    end
end

-- ESP for new players
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(1)  -- Wait for the character to fully load
        addEsp(player)
    end)
end)

-- Function to repeat ESP when the round ends
local function onRoundEnd()
    wait(3)  -- Adjust wait time as necessary for the game
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if player.Character then
                local highlight = player.Character:FindFirstChildOfClass("Highlight")
                if highlight then
                    highlight:Destroy()  -- Remove existing highlight
                end
            end
            addEsp(player)  -- Re-add ESP for each player
        end
    end
end

-- Connect to round end event (you need to define what triggers a round end in your game)
-- Assuming there is an event or function you can call to know when a round ends
ReplicatedStorage.RoundEnded.Event:Connect(onRoundEnd) -- Replace with the actual event that signals round end

-- Grab Gun Button
local grabGunButton = Instance.new("TextButton")
grabGunButton.Size = UDim2.new(1, -20, 0, 30)
grabGunButton.Position = UDim2.new(0, 10, 0, 50)
grabGunButton.Text = "Grab Gun"
grabGunButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
grabGunButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
grabGunButton.TextColor3 = Color3.fromRGB(255, 255, 255)
grabGunButton.Parent = MainFrame

grabGunButton.MouseButton1Click:Connect(function()
    -- Check if the sheriff is dead
    local sheriffAlive = false
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Backpack:FindFirstChild("Gun") then
            sheriffAlive = true
            break
        end
    end

    -- Allow grabbing the gun only if the sheriff is not alive
    if not sheriffAlive then
        local gunFound = false
        for _, item in pairs(Workspace:GetDescendants()) do
            if item:IsA("Tool") and item.Name == "Gun" then
                LocalPlayer.Character.HumanoidRootPart.CFrame = item.Handle.CFrame
                item.Parent = LocalPlayer.Backpack  -- Move the gun to the player's backpack
                gunFound = true
                print("Gun grabbed successfully.")
                break
            end
        end
        if not gunFound then
            print("No gun found in the workspace.")
        end
    else
        print("Sheriff is still alive. You cannot grab the gun.")
    end
end)

-- Silent Shooting Functionality
local function onSilentShoot()
    if LocalPlayer.Backpack:FindFirstChild("Gun") or LocalPlayer.Character:FindFirstChild("Gun") then
        -- Replace this with the code to enable silent shooting
        print("Silent shooting is enabled.")
        -- Your shooting logic here
    else
        print("You need to grab the gun first.")
    end
end

-- Silent Shoot Button
local silentShootButton = Instance.new("TextButton")
silentShootButton.Size = UDim2.new(1, -20, 0, 30)
silentShootButton.Position = UDim2.new(0, 10, 0, 90)
silentShootButton.Text = "Silent Shoot"
silentShootButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
silentShootButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
silentShootButton.TextColor3 = Color3.fromRGB(255, 255, 255)
silentShootButton.Parent = MainFrame

silentShootButton.MouseButton1Click:Connect(onSilentShoot)

-- Auto Candy Feature (if applicable)
local function autoCandy()
    while wait(1) do  -- Adjust the wait time as necessary
        for _, item in pairs(Workspace:GetChildren()) do
            if item:IsA("Tool") and item.Name == "Candy" then
                item.Parent = LocalPlayer.Backpack  -- Automatically grab candy
                print("Candy grabbed automatically.")
            end
        end
    end
end

-- Start Auto Candy (optional)
-- autoCandy()  -- Uncomment to enable

-- Additional functionalities can be added here...
