-- Vanxell Hub for Murder Mystery 2 Auto Collect Candy
-- WARNING: Use this script at your own risk.

local VanxellHub = Instance.new("ScreenGui")
VanxellHub.Name = "VanxellHub"
VanxellHub.Parent = game.CoreGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MainFrame.Parent = VanxellHub

local Title = Instance.new("TextLabel")
Title.Text = "Vanxell Hub - MM2"
Title.Size = UDim2.new(1, 0, 0, 50)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.TextScaled = true
Title.Parent = MainFrame

local isCollecting = false

-- Function to create buttons
local function CreateButton(name, callback, position)
    local Button = Instance.new("TextButton")
    Button.Text = name
    Button.Size = UDim2.new(0.9, 0, 0, 40)
    Button.Position = position
    Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Parent = MainFrame
    Button.MouseButton1Click:Connect(callback)
end

-- Auto Candy Feature
CreateButton("Toggle Auto Candy", function()
    isCollecting = not isCollecting
    if isCollecting then
        Button.Text = "Auto Candy: ON"
        -- Teleport to candy and collect
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        while isCollecting do
            for _, candy in pairs(workspace:GetChildren()) do
                if candy:IsA("Part") and candy.Name == "Candy" then
                    character.HumanoidRootPart.CFrame = candy.CFrame
                    wait(0.5) -- Adjust timing as needed
                end
            end
            wait(1) -- Wait before next scan for candies
        end
    else
        Button.Text = "Auto Candy: OFF"
    end
end, UDim2.new(0.05, 0, 0.1, 0))

-- Reset Button
CreateButton("Reset Character", function()
    local player = game.Players.LocalPlayer
    player.Character:BreakJoints() -- This will reset the character
end, UDim2.new(0.05, 0, 0.2, 0))

-- Auto Shoot Button (for Sheriff)
local isShooting = false
CreateButton("Toggle Auto Shoot", function()
    isShooting = not isShooting
    if isShooting then
        Button.Text = "Auto Shoot: ON"
        local player = game.Players.LocalPlayer

        while isShooting do
            if player and player.Character then
                -- Check for murderers in your view
                for _, enemy in pairs(workspace:GetChildren()) do
                    if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("Player") then
                        -- Assuming murderer has a specific tag or name, adjust this logic
                        if enemy.Player.Value == "Murderer" then
                            player.Character:FindFirstChildOfClass("Tool").Activated:Fire()
                        end
                    end
                end
            end
            wait(1) -- Adjust as needed
        end
    else
        Button.Text = "Auto Shoot: OFF"
    end
end, UDim2.new(0.05, 0, 0.3, 0))

-- Exit Button
local ExitButton = Instance.new("TextButton")
ExitButton.Text = "Exit"
ExitButton.Size = UDim2.new(0.9, 0, 0, 40)
ExitButton.Position = UDim2.new(0.05, 0, 0.8, 0)
ExitButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
ExitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExitButton.Parent = MainFrame
ExitButton.MouseButton1Click:Connect(function()
    VanxellHub:Destroy()
end)

-- Draggable UI Function
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
